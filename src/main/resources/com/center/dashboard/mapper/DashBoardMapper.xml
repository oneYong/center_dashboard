<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.center.dashboard.mapper.DashBoardMapper">
    <select id="getTotalCntByDate" parameterType="String" resultType="totalDataVO" >
        <![CDATA[
            select sum(A.total_cnt) as totalCnt
                FROM (
                  SELECT sum(tcnt) AS total_cnt
                  FROM sbc_ruc_total_user
                  WHERE crt_date = #{date}
                  UNION ALL
                  SELECT sum(tcnt) AS total_cnt
                  FROM sbc_kic_total_user
                  WHERE crt_date = #{date}
                  UNION ALL
                  SELECT sum(tcnt) AS total_cnt
                  FROM sbc_eic_total_user
                  WHERE crt_date = #{date}
                  UNION ALL
                  SELECT sum(tcnt) AS total_cnt
                  FROM sbc_aic_total_user
                  WHERE crt_date = #{date}
                ) A;

        ]]>
    </select>
    <select id="getTotalUser_KIC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select crt_date as crtDate
                  ,cntry_code as cntryCode
                  ,cntry_name as cntryName
                  ,tcnt as tCnt
              from sbc_kic_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          order by crtDate;

        ]]>
    </select>

    <select id="getCntryCode_KIC" parameterType="String" resultType="String" >
        <![CDATA[
            select cntry_code as cntryCode
              from sbc_kic_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          GROUP BY cntry_code order by tcnt desc;

        ]]>
    </select>

    <select id="getCrtDate" parameterType="String" resultType="String" >
        <![CDATA[
              select ds as crtDate
                from sbc_date_table
               where ds >= #{startDate}
                 and ds <= #{endDate};
        ]]>
    </select>

    <select id="getTotalUser_AIC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select crt_date as crtDate
                  ,cntry_code as cntryCode
                  ,cntry_name as cntryName
                  ,tcnt as tCnt
              from sbc_aic_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          order by crtDate;

        ]]>
    </select>

    <select id="getCntryCode_AIC" parameterType="String" resultType="String" >
        <![CDATA[
            select cntry_code as cntryCode
              from sbc_aic_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          GROUP BY cntry_code order by tcnt desc;

        ]]>
    </select>

    <select id="getTotalUser_EIC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select crt_date as crtDate
                  ,cntry_code as cntryCode
                  ,cntry_name as cntryName
                  ,tcnt as tCnt
              from sbc_eic_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          order by crtDate;

        ]]>
    </select>

    <select id="getCntryCode_EIC" parameterType="String" resultType="String" >
        <![CDATA[
            select cntry_code as cntryCode
              from sbc_eic_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          GROUP BY cntry_code order by tcnt desc;

        ]]>
    </select>

    <select id="getTotalUser_RUC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select crt_date as crtDate
                  ,cntry_code as cntryCode
                  ,cntry_name as cntryName
                  ,tcnt as tCnt
              from sbc_ruc_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          order by crtDate;

        ]]>
    </select>

    <select id="getCntryCode_RUC" parameterType="String" resultType="String" >
        <![CDATA[
            select cntry_code as cntryCode
              from sbc_ruc_total_user
             where crt_date >= #{startDate}
               and crt_date <= #{endDate}
          GROUP BY cntry_code order by tcnt desc;

        ]]>
    </select>

    <select id="getServiceList_KIC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
             select TEMP.svcCode as svcCode
                   ,TEMP.svcName as svcName
                   ,TEMP.tCnt as tCnt
              from
              (
              SELECT
                svc_code  AS svcCode,
                svc_name  AS svcName,
                sum(tcnt) AS tCnt
              FROM sbc_kic_user
              WHERE crt_date = #{date}
                    AND svc_code NOT IN ('SVC001', 'SVC201', 'SVC202', 'SVC302', 'SVC411', 'SVC501', 'SVC605', 'SVC710', 'SVC716')
              GROUP BY svc_code
              UNION ALL
              SELECT
                'SVCNEW'    AS svcCode,
                'SmartThinQ'        AS svcName,
                sum(X.tCnt) AS tCnt
              FROM
                (
                  SELECT
                    svc_code  AS svcCode,
                    svc_name  AS svcName,
                    sum(tcnt) AS tCnt
                  FROM sbc_kic_user
                  WHERE crt_date = #{date}
                        AND svc_code IN ('SVC201', 'SVC202')
                  GROUP BY svc_code) X
            ) TEMP
            ORDER BY TEMP.tCnt desc;

        ]]>
    </select>

    <select id="getServiceList_AIC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select TEMP.svcCode as svcCode
                   ,TEMP.svcName as svcName
                   ,TEMP.tCnt as tCnt
              from
              (
              SELECT
                svc_code  AS svcCode,
                svc_name  AS svcName,
                sum(tcnt) AS tCnt
              FROM sbc_aic_user
              WHERE crt_date = #{date}
                    AND svc_code NOT IN ('SVC001', 'SVC201', 'SVC202', 'SVC302', 'SVC710', 'SVC716')
              GROUP BY svc_code
              UNION ALL
              SELECT
                'SVCNEW'    AS svcCode,
                'SmartThinQ'        AS svcName,
                sum(X.tCnt) AS tCnt
              FROM
                (
                  SELECT
                    svc_code  AS svcCode,
                    svc_name  AS svcName,
                    sum(tcnt) AS tCnt
                  FROM sbc_aic_user
                  WHERE crt_date = #{date}
                        AND svc_code IN ('SVC201', 'SVC202')
                  GROUP BY svc_code) X
            ) TEMP
            ORDER BY TEMP.tCnt desc;

        ]]>
    </select>

    <select id="getServiceList_EIC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select TEMP.svcCode as svcCode
                   ,TEMP.svcName as svcName
                   ,TEMP.tCnt as tCnt
              from
              (
              SELECT
                svc_code  AS svcCode,
                svc_name  AS svcName,
                sum(tcnt) AS tCnt
              FROM sbc_eic_user
              WHERE crt_date = #{date}
                    AND svc_code NOT IN ('SVC001', 'SVC201', 'SVC202', 'SVC302', 'SVC710')
              GROUP BY svc_code
              UNION ALL
              SELECT
                'SVCNEW'    AS svcCode,
                'SmartThinQ'        AS svcName,
                sum(X.tCnt) AS tCnt
              FROM
                (
                  SELECT
                    svc_code  AS svcCode,
                    svc_name  AS svcName,
                    sum(tcnt) AS tCnt
                  FROM sbc_eic_user
                  WHERE crt_date = #{date}
                        AND svc_code IN ('SVC201', 'SVC202')
                  GROUP BY svc_code) X
            ) TEMP
            ORDER BY TEMP.tCnt desc;

        ]]>
    </select>

    <select id="getServiceList_RUC" parameterType="String" resultType="totalUserVO" >
        <![CDATA[
            select svc_code as svcCode
                  ,svc_name as svcName
                  ,sum(tcnt) as tCnt
              from sbc_ruc_user
             where crt_date = #{date}
          group by svc_code
          order by tCnt desc;

        ]]>
    </select>

    <select id="getAWSBillingTotalCost_CNS" parameterType="list" resultType="billingDataVO" >

            select total_date as totalDate
                  ,truncate(sum(total_cost),2) as totalCost
              from sbc_aws_account_billinginfo
             where total_date in
                     <foreach collection="dateList" item="item" separator=","
                              open="(" close=")">
                         #{item}
                     </foreach>
              group by total_date order by total_date DESC ;


    </select>

    <select id="getAWSBillingTotalCost_TOTAL" parameterType="list" resultType="billingDataVO" >
            select A.totalDate
                    ,truncate(sum(A.totalCost),2) as totalCost
              from (

            select total_date as totalDate
                              ,truncate(sum(total_cost),2) as totalCost
                          from sbc_aws_account_billinginfo
                         where total_date in
                            <foreach collection="dateList" item="item" separator=","
                                     open="(" close=")">
                                #{item}
                            </foreach>
                          group by total_date
            union all
            select total_date as totalDate
                              ,truncate(sum(total_cost),2) as totalCost
                          from sbc_mega_aws_account_billinginfo
                         where total_date in
                            <foreach collection="dateList" item="item" separator=","
                                     open="(" close=")">
                                #{item}
                            </foreach>
                          group by total_date
            union all
            select total_date as totalDate
                              ,truncate(sum(total_cost),2) as totalCost
                          from sbc_kinx_aws_account_billinginfo
                         where total_date in
                            <foreach collection="dateList" item="item" separator=","
                                     open="(" close=")">
                                #{item}
                            </foreach>
                          group by total_date

              ) A GROUP BY A.totalDate ORDER BY totalDate desc;



    </select>

    <select id="getAWSServiceList_CNS" parameterType="String" resultType="billingDataVO" >
        <![CDATA[
            select if(tag = '','N/A',tag) as tag
                  ,truncate(sum(total_cost),2) as totalCost
              from sbc_aws_account_billinginfo
             where total_date = #{date}
              group by tag order by totalCost desc;

        ]]>
    </select>

    <select id="getAWSServiceList_TOTAL" parameterType="String" resultType="billingDataVO" >
        <![CDATA[
                select A.tag
                      ,truncate(sum(A.totalCost),2) as totalCost
                  from
                (
                select if(tag = '','N/A',tag) as tag
                                  ,truncate(sum(total_cost),2) as totalCost
                              from sbc_aws_account_billinginfo
                             where total_date = #{date}
                              group by tag
                union all
                select service_name as tag
                       ,truncate(sum(total_cost),2) as totalCost
                  from sbc_mega_aws_account_billinginfo
                where total_date = #{date}
                  GROUP BY service_name
                union all
                select service_name as tag
                       ,truncate(sum(total_cost),2) as totalCost
                  from sbc_kinx_aws_account_billinginfo
                where total_date = #{date}
                  GROUP BY service_name
                ) A GROUP BY A.tag ORDER BY A.totalCost desc;

        ]]>
    </select>

    <select id="getAWSProductList_CNS" parameterType="String" resultType="billingDataVO" >
        <![CDATA[
            select product_code as productCode
                  ,product_name as productName
                  ,truncate(sum(total_cost),2) as totalCost
              from sbc_aws_account_billinginfo
             where total_date = #{date}
             group by product_code order by totalCost desc;

        ]]>
    </select>

    <select id="getAWSProductList_TOTAL" parameterType="String" resultType="billingDataVO" >
        <![CDATA[
            select A.productCode
                   ,A.productName
                   ,truncate(sum(A.totalCost), 2) AS totalCost
              from
            (
                SELECT product_code AS productCode
                , product_name AS productName
                , truncate(sum(total_cost), 2) AS totalCost
                FROM sbc_aws_account_billinginfo
                WHERE total_date = #{date}
                GROUP BY product_code
                UNION ALL
                SELECT product_code AS productCode
                , product_name AS productName
                , truncate(sum(total_cost), 2) AS totalCost
                FROM sbc_mega_aws_account_billinginfo
                WHERE total_date = #{date}
                GROUP BY product_code
                UNION ALL
                SELECT product_code AS productCode
                , product_name AS productName
                , truncate(sum(total_cost), 2) AS totalCost
                FROM sbc_kinx_aws_account_billinginfo
                WHERE total_date = #{date}
                GROUP BY product_code
            ) A GROUP BY A.productCode ORDER BY totalCost desc;

        ]]>
    </select>

    <select id="getAWSMonthlyProductCost_CNS" parameterType="String" resultType="billingDataVO" >
        <![CDATA[
            SELECT  B.total_date as totalDate
	      		,truncate(SUM(CASE WHEN B.product_code = 'AmazonEC2' THEN B.total_cost END),2) AS 'ec2'
				,truncate(SUM(CASE WHEN B.product_code = 'AWSDataTransfer' THEN B.total_cost END),2) AS 'dt'
		        ,truncate(SUM(CASE WHEN B.product_code = 'AmazonRDS' THEN B.total_cost END),2) AS 'rds'
				,truncate(SUM(CASE WHEN B.product_code = 'AmazonS3' THEN B.total_cost END),2) AS 's3'
				,truncate(SUM(CASE WHEN B.product_code = 'AWSDatabaseMigrationSvc' THEN B.total_cost END),2) AS 'dms'
				,truncate(SUM(CASE WHEN B.product_code = 'AmazonRoute53' THEN B.total_cost END),2) AS 'r53'
		        ,truncate(SUM(CASE WHEN B.product_code = 'AWSDirectConnect' THEN B.total_cost END),2) AS 'dc'
		        ,truncate(SUM(CASE WHEN B.product_code = 'AmazonVPC' THEN B.total_cost END),2) AS 'vpc'
		        ,truncate(SUM(CASE WHEN B.product_code = 'AmazonCloudWatch' THEN B.total_cost END),2) AS 'cw'
		        ,truncate(SUM(CASE WHEN B.product_code = 'AWSCloudTrail' THEN B.total_cost END),2) AS 'ct'
				,truncate(SUM(CASE WHEN B.product_code = 'awskms' THEN B.total_cost END),2) AS 'kms'
		        ,truncate(SUM(B.before_cost_extra),2) AS 'beforeCostExtra'
		        ,truncate(SUM(B.total_cost),2) AS 'totalCost'
			FROM sbc_aws_account_billinginfo_total B
		   WHERE B.register_date >=  CONCAT(#{startMonth},'02') AND B.register_date < CONCAT(period_add(#{endMonth},1),'02')
		 GROUP BY B.total_date
		ORDER BY B.register_date desc

        ]]>
    </select>

    <select id="getAWSMonthlyProductCost_TOTAL" parameterType="String" resultType="billingDataVO" >
        <![CDATA[
            SELECT A.totalDate,
                  truncate(SUM(A.ec2), 2)          AS 'ec2',
                  truncate(SUM(A.dt), 2)          AS 'dt',
                  truncate(SUM(A.rds), 2)          AS 'rds',
                  truncate(SUM(A.s3), 2)          AS 's3',
                  truncate(SUM(A.dms), 2)          AS 'dms',
                  truncate(SUM(A.r53), 2)          AS 'r53',
                  truncate(SUM(A.dc), 2)          AS 'dc',
                  truncate(SUM(A.vpc), 2)          AS 'vpc',
                  truncate(SUM(A.cw), 2)          AS 'cw',
                  truncate(SUM(A.ct), 2)          AS 'ct',
                  truncate(SUM(A.kms), 2)          AS 'kms',
                  truncate(SUM(A.beforeCostExtra), 2) AS 'beforeCostExtra',
                  truncate(SUM(A.totalCost), 2)        AS 'totalCost'
            FROM
              (
                SELECT
                  B.total_date                          AS totalDate,
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonEC2'
                    THEN B.total_cost END), 2)          AS 'ec2',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDataTransfer'
                    THEN B.total_cost END), 2)          AS 'dt',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonRDS'
                    THEN B.total_cost END), 2)          AS 'rds',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonS3'
                    THEN B.total_cost END), 2)          AS 's3',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDatabaseMigrationSvc'
                    THEN B.total_cost END), 2)          AS 'dms',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonRoute53'
                    THEN B.total_cost END), 2)          AS 'r53',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDirectConnect'
                    THEN B.total_cost END), 2)          AS 'dc',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonVPC'
                    THEN B.total_cost END), 2)          AS 'vpc',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonCloudWatch'
                    THEN B.total_cost END), 2)          AS 'cw',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSCloudTrail'
                    THEN B.total_cost END), 2)          AS 'ct',
                  truncate(SUM(CASE WHEN B.product_code = 'awskms'
                    THEN B.total_cost END), 2)          AS 'kms',
                  truncate(SUM(B.before_cost_extra), 2) AS 'beforeCostExtra',
                  truncate(SUM(B.total_cost), 2)        AS 'totalCost'
                FROM sbc_aws_account_billinginfo_total B
                WHERE B.register_date >= CONCAT(#{startMonth}, '02') AND B.register_date < CONCAT(period_add(#{endMonth}, 1), '02')
                GROUP BY B.total_date
                UNION ALL
                SELECT
                  B.total_date                 AS totalDate,
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonEC2'
                    THEN B.total_cost END), 2) AS 'ec2',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDataTransfer'
                    THEN B.total_cost END), 2) AS 'dt',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonRDS'
                    THEN B.total_cost END), 2) AS 'rds',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonS3'
                    THEN B.total_cost END), 2) AS 's3',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDatabaseMigrationSvc'
                    THEN B.total_cost END), 2) AS 'dms',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonRoute53'
                    THEN B.total_cost END), 2) AS 'r53',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDirectConnect'
                    THEN B.total_cost END), 2) AS 'dc',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonVPC'
                    THEN B.total_cost END), 2) AS 'vpc',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonCloudWatch'
                    THEN B.total_cost END), 2) AS 'cw',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSCloudTrail'
                    THEN B.total_cost END), 2) AS 'ct',
                  truncate(SUM(CASE WHEN B.product_code = 'awskms'
                    THEN B.total_cost END), 2) AS 'kms',
                  truncate(
                      (SELECT sum(x.total_cost)
                       FROM sbc_mega_aws_account_billinginfo x
                       WHERE x.total_date = B.total_date)
                      - (SELECT sum(x.total_cost)
                         FROM sbc_mega_aws_account_billinginfo x
                         WHERE x.total_date = date_sub(B.total_date, INTERVAL 1 DAY)
                      )
                      , 2)                     AS 'beforeCostExtra',
                  truncate(
                      (SELECT sum(x.total_cost)
                       FROM sbc_mega_aws_account_billinginfo x
                       WHERE x.total_date = B.total_date)
                      , 2)                     AS 'totalCost'
                FROM sbc_mega_aws_account_billinginfo B
                WHERE B.register_date >= CONCAT(#{startMonth}, '02') AND B.register_date < CONCAT(period_add(#{endMonth}, 1), '02')
                GROUP BY B.total_date
                UNION ALL
                SELECT
                  B.total_date                 AS totalDate,
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonEC2'
                    THEN B.total_cost END), 2) AS 'ec2',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDataTransfer'
                    THEN B.total_cost END), 2) AS 'dt',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonRDS'
                    THEN B.total_cost END), 2) AS 'rds',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonS3'
                    THEN B.total_cost END), 2) AS 's3',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDatabaseMigrationSvc'
                    THEN B.total_cost END), 2) AS 'dms',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonRoute53'
                    THEN B.total_cost END), 2) AS 'r53',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSDirectConnect'
                    THEN B.total_cost END), 2) AS 'dc',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonVPC'
                    THEN B.total_cost END), 2) AS 'vpc',
                  truncate(SUM(CASE WHEN B.product_code = 'AmazonCloudWatch'
                    THEN B.total_cost END), 2) AS 'cw',
                  truncate(SUM(CASE WHEN B.product_code = 'AWSCloudTrail'
                    THEN B.total_cost END), 2) AS 'ct',
                  truncate(SUM(CASE WHEN B.product_code = 'awskms'
                    THEN B.total_cost END), 2) AS 'kms',
                  truncate(
                      (SELECT sum(x.total_cost)
                       FROM sbc_kinx_aws_account_billinginfo x
                       WHERE x.total_date = B.total_date)
                      - (SELECT sum(x.total_cost)
                         FROM sbc_kinx_aws_account_billinginfo x
                         WHERE x.total_date = date_sub(B.total_date, INTERVAL 1 DAY)
                      )
                      , 2)                     AS 'beforeCostExtra',
                  truncate(
                      (SELECT sum(x.total_cost)
                       FROM sbc_kinx_aws_account_billinginfo x
                       WHERE x.total_date = B.total_date)
                      , 2)                     AS 'totalCost'
                FROM sbc_kinx_aws_account_billinginfo B
                WHERE B.register_date >= CONCAT(#{startMonth}, '02') AND B.register_date < CONCAT(period_add(#{endMonth}, 1), '02')
                GROUP BY B.total_date
              ) A GROUP BY A.totalDate order by A.totalDate desc;

        ]]>
    </select>

    <select id="getFaultCountByService" parameterType="faultDataVO" resultType="faultDataVO" >
        <![CDATA[
            SELECT A.faultinfo_id as faultInfoId
                   ,A.service_name as serviceName
                   ,A.region as region
                   ,A.description as description
                   ,A.register_date as registerDate
                   ,COUNT(B.month_info) as faultCount
             FROM sbc_faultinfo A
            LEFT OUTER JOIN (select * from sbc_faultinfo_detail x where x.month_info=#{monthInfo}) B
                 ON A.faultinfo_id = B.faultinfo_id
             GROUP BY A.service_name
             ORDER BY A.faultinfo_id;

        ]]>
    </select>

    <select id="getFaultCountByRegion" parameterType="faultDataVO" resultType="faultDataVO" >
        <![CDATA[
            SELECT  C.region as region
                   ,sum(C.faultCount) as faultCount
              FROM
              (
            SELECT A.faultinfo_id as faultInfoId
                   ,A.service_name as serviceName
                   ,A.region as region
                   ,A.description as description
                   ,A.register_date as registerDate
                   ,COUNT(B.month_info) as faultCount
             FROM sbc_faultinfo A
            LEFT OUTER JOIN (select * from sbc_faultinfo_detail x where x.month_info=#{monthInfo}) B
                 ON A.faultinfo_id = B.faultinfo_id
             GROUP BY A.service_name
             ORDER BY A.faultinfo_id
              ) C GROUP BY C.region;

        ]]>
    </select>

    <select id="getFaultList" parameterType="faultDataVO" resultType="faultDataVO" >
                SELECT A.service_name as serviceName
                       ,A.region as region
                       ,B.grade as grade
                       ,B.month_info as monthInfo
                       ,B.faultinfo_minute as faultMinute
                       ,B.comment as comment
                       ,B.register_date as registerDate
                  FROM sbc_faultinfo A, sbc_faultinfo_detail B
                 WHERE A.faultinfo_id = B.faultinfo_id
                    <if test="faultInfoId != 0">
                        AND A.faultinfo_id = #{faultInfoId}
                    </if>
                    <if test="monthInfo != null and monthInfo != ''">
                        AND B.month_info = #{monthInfo}
                    </if>
                    <if test="region != null and region != ''">
                        AND A.region = #{region}
                    </if>
                ORDER BY registerDate desc;

    </select>

    <select id="getFaultListMonthly" parameterType="faultDataVO" resultType="faultDataVO" >
        <![CDATA[
			SELECT A.faultinfo_id AS faultInfoId
			       ,A.service_name AS serviceName
			       ,A.description
			       ,A.region
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month1 ) AS monthCnt1
				     ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month1 ),0) AS monthMinute1
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month2 ) AS monthCnt2
					   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month2 ),0) AS monthMinute2
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month3 ) AS monthCnt3
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month3 ),0) AS monthMinute3
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month4 ) AS monthCnt4
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month4 ),0) AS monthMinute4
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month5 ) AS monthCnt5
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month5 ),0) AS monthMinute5
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month6 ) AS monthCnt6
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month6 ),0) AS monthMinute6
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month7 ) AS monthCnt7
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month7 ),0) AS monthMinute7
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month8 ) AS monthCnt8
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month8 ),0) AS monthMinute8
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month9 ) AS monthCnt9
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month9 ),0) AS monthMinute9
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month10 ) AS monthCnt10
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month10 ),0) AS monthMinute10
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month11 ) AS monthCnt11
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month11 ),0) AS monthMinute11
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month12 ) AS monthCnt12
						   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month12 ),0) AS monthMinute12
			       ,(SELECT COUNT(*) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month13 ) AS monthCnt13
					   ,IFNULL((SELECT SUM(x.faultinfo_minute) FROM sbc_faultinfo_detail x where x.faultinfo_id = A.faultinfo_id and x.month_info = B.month13 ),0) AS monthMinute13
			  FROM sbc_faultinfo A, (
			SELECT MAX(A.month1) AS month1 ,MAX(A.month2) AS month2 ,MAX(A.month3) AS month3,MAX(A.month4) AS month4 ,MAX(A.month5) AS month5
			       ,MAX(A.month6) AS month6 ,MAX(A.month7) AS month7 ,MAX(A.month8) AS month8 ,MAX(A.month9) AS month9 ,MAX(A.month10) AS month10
			       ,MAX(A.month11) AS month11 ,MAX(A.month12) AS month12 ,MAX(A.month13) AS month13
			  FROM (
				SELECT
					CASE WHEN A.row_num = 1
						THEN A.month_info END AS month1,
					CASE WHEN A.row_num = 2
						THEN A.month_info END AS month2,
					CASE WHEN A.row_num = 3
						THEN A.month_info END AS month3,
					CASE WHEN A.row_num = 4
						THEN A.month_info END AS month4,
					CASE WHEN A.row_num = 5
						THEN A.month_info END AS month5,
					CASE WHEN A.row_num = 6
						THEN A.month_info END AS month6,
					CASE WHEN A.row_num = 7
						THEN A.month_info END AS month7,
					CASE WHEN A.row_num = 8
						THEN A.month_info END AS month8,
					CASE WHEN A.row_num = 9
						THEN A.month_info END AS month9,
					CASE WHEN A.row_num = 10
						THEN A.month_info END AS month10,
					CASE WHEN A.row_num = 11
						THEN A.month_info END AS month11,
					CASE WHEN A.row_num = 12
						THEN A.month_info END AS month12,
					CASE WHEN A.row_num = 13
						THEN A.month_info END AS month13
				FROM (
							 SELECT
								 X.month_info           AS month_info,
								 @rownum := @rownum + 1 AS row_num
							 FROM (
											SELECT substr(d, 1, 7) AS month_info
											FROM sbc_date_table
											WHERE substr(d, 1, 7) >= #{startMonth}
														AND substr(d, 1, 7) <= #{endMonth}
											GROUP BY substr(d, 1, 7)
										) X, (SELECT @rownum := 0) Y
						 ) A
			) A
					) B
					ORDER BY A.region;
			]]>

    </select>


    <select id="getFaultDayDiff"  resultType="Integer" >
        <![CDATA[
              select datediff(register_date,now()) * -1 as fault_diff
                from sbc_faultinfo_detail
            order by register_date desc LIMIT 1;
			]]>

    </select>

    <select id="getTotalUserByService"  parameterType="String" resultType="Integer" >
        <![CDATA[
              select SUM(A.tcnt) as totalCnt from
                (
                select SUM(tcnt) as tcnt from sbc_kic_user where svc_code = #{serviceCode} and crt_date = #{date}
                union all
                select SUM(tcnt) as tcnt  from sbc_aic_user where svc_code = #{serviceCode} and crt_date = #{date}
                union all
                select SUM(tcnt) as tcnt  from sbc_eic_user where svc_code = #{serviceCode} and crt_date = #{date}
                union all
                select SUM(tcnt) as tcnt from sbc_ruc_user where svc_code = #{serviceCode} and crt_date = #{date}
                ) A
			]]>
    </select>

    <select id="getActTotalUserByService"  parameterType="String" resultType="Integer" >
        <![CDATA[
              select SUM(A.tcnt) as totalCnt from
                (
                select SUM(tcnt) as tcnt from sbc_kic_act_user where svc_code = #{serviceCode} and crt_date = #{date}
                union all
                select SUM(tcnt) as tcnt  from sbc_aic_act_user where svc_code = #{serviceCode} and crt_date = #{date}
                union all
                select SUM(tcnt) as tcnt  from sbc_eic_act_user where svc_code = #{serviceCode} and crt_date = #{date}
                union all
                select SUM(tcnt) as tcnt from sbc_ruc_act_user where svc_code = #{serviceCode} and crt_date = #{date}
                ) A
			]]>
    </select>

    <select id="getAWSBillingTotalCostByService_CNS" parameterType="paramVO" resultType="billingDataVO" >

        select total_date as totalDate
        ,truncate(sum(total_cost),2) as totalCost
        from sbc_aws_account_billinginfo
        where total_date in
        <foreach collection="dateList" item="item" separator=","
                 open="(" close=")">
            #{item}
        </foreach>
        and tag LIKE #{serviceName}
        group by total_date order by total_date DESC ;

    </select>

    <select id="getAWSBillingTotalCostByService_MEGA" parameterType="paramVO" resultType="billingDataVO" >

        select total_date as totalDate
        ,truncate(sum(total_cost),2) as totalCost
        from sbc_mega_aws_account_billinginfo
        where total_date in
        <foreach collection="dateList" item="item" separator=","
                 open="(" close=")">
            #{item}
        </foreach>
        and service_name LIKE #{serviceName}
        group by total_date order by total_date DESC ;

    </select>

    <select id="getNationListByRegion"  parameterType="String" resultType="totalUserVO" >
        <![CDATA[
               select A.crt_date as crtDate
                     ,A.tcnt as tCnt
                     ,A.svc_code as svcCode
                     ,A.svc_name as svcName
                     ,A.cntry_code as cntryCode
                     ,A.cntry_name as cntryName
                from
            (
            select * FROM sbc_kic_user WHERE svc_code = #{serviceCode} AND crt_date = #{date}
            UNION ALL
            SELECT * FROM sbc_aic_user WHERE svc_code = #{serviceCode} AND crt_date = #{date}
              UNION ALL
            SELECT * FROM sbc_eic_user WHERE svc_code = #{serviceCode} AND crt_date = #{date}
              UNION ALL
            SELECT * FROM sbc_ruc_user WHERE svc_code = #{serviceCode} AND crt_date = #{date}
            ) A group by A.cntry_code order by A.tcnt desc;
			]]>
    </select>

</mapper>